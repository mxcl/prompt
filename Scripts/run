#!/usr/bin/env pkgx +xcbeautify bash

# Build and run script for teaBASEv2
# This script builds the Xcode project and launches the resulting application

cd "$(dirname "$0")/.."  # Change to project root directory

set -e  # Exit on error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Configuration
PROJECT_DIR="$(pwd)"
PROJECT_NAME="teaBASEv2"
SCHEME_NAME="teaBASEv2"
BUILD_CONFIG="Debug"
DERIVED_DATA_PATH="$PROJECT_DIR/DerivedData"
DESTINATION="platform=macOS,arch=arm64,name=My Mac"

# Parse command line arguments
CLEAN_BUILD=false
RELEASE_BUILD=false
SKIP_RUN=false

while [[ $# -gt 0 ]]; do
  case $1 in
    --clean)
      CLEAN_BUILD=true
      shift
      ;;
    --release)
      RELEASE_BUILD=true
      BUILD_CONFIG="Release"
      shift
      ;;
    --build-only)
      SKIP_RUN=true
      shift
      ;;
    --help)
      echo "Usage: $0 [OPTIONS]"
      echo ""
      echo "Options:"
      echo "  --clean       Clean build (removes build artifacts first)"
      echo "  --release     Build in Release configuration (default: Debug)"
      echo "  --build-only  Build only, don't run the application"
      echo "  --help        Show this help message"
      exit 0
      ;;
    *)
      echo -e "${RED}Unknown option: $1${NC}"
      echo "Use --help for usage information"
      exit 1
      ;;
  esac
done

# Clean if requested
if [ "$CLEAN_BUILD" = true ]; then
  echo -e "${YELLOW}🧹 Cleaning build artifacts...${NC}"
  rm -rf "$DERIVED_DATA_PATH"
  xcodebuild clean \
    -project "$PROJECT_DIR/$PROJECT_NAME.xcodeproj" \
    -scheme "$SCHEME_NAME" \
    -configuration "$BUILD_CONFIG" \
    -destination "$DESTINATION" \
    > /dev/null 2>&1 || true
  echo -e "${GREEN}✓ Clean complete${NC}"
fi

# Build the project
echo -e "${YELLOW}🔨 Building $PROJECT_NAME ($BUILD_CONFIG)...${NC}"
xcodebuild build \
  -project "$PROJECT_DIR/$PROJECT_NAME.xcodeproj" \
  -scheme "$SCHEME_NAME" \
  -configuration "$BUILD_CONFIG" \
  -destination "$DESTINATION" \
  -derivedDataPath "$DERIVED_DATA_PATH" \
  | xcbeautify

BUILD_RESULT=$?

if [ $BUILD_RESULT -ne 0 ]; then
  echo -e "${RED}❌ Build failed${NC}"
  exit $BUILD_RESULT
fi

echo -e "${GREEN}✓ Build successful${NC}"

# Find the built app
APP_PATH="$DERIVED_DATA_PATH/Build/Products/$BUILD_CONFIG/$PROJECT_NAME.app"

if [ ! -d "$APP_PATH" ]; then
  echo -e "${RED}❌ Built application not found at: $APP_PATH${NC}"
  exit 1
fi

# Skip running if requested
if [ "$SKIP_RUN" = true ]; then
  echo -e "${GREEN}✓ Build complete. Application at: $APP_PATH${NC}"
  exit 0
fi

# Kill any existing instances
echo -e "${YELLOW}🔄 Stopping any running instances...${NC}"
pkill -f "$PROJECT_NAME" 2>/dev/null || true
sleep 0.5

# Run the application
echo -e "${GREEN}🚀 Launching $PROJECT_NAME...${NC}"
"$APP_PATH"/Contents/MacOS/"$PROJECT_NAME"
