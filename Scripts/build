#!/usr/bin/env pkgx +xcbeautify bash

# Build script for teaBASEv2
# This script builds the Xcode project and outputs the resulting app path

cd "$(dirname "$0")/.."  # Change to project root directory

set -e  # Exit on error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Configuration
PROJECT_DIR="$(pwd)"
PROJECT_NAME="teaBASEv2"
SCHEME_NAME="teaBASEv2"
BUILD_CONFIG="Debug"
DERIVED_DATA_PATH="$PROJECT_DIR/DerivedData"
DESTINATION="platform=macOS,arch=arm64,name=My Mac"

# Parse command line arguments
CLEAN_BUILD=false

print_help() {
  echo "Usage: $0 [OPTIONS]"
  echo ""
  echo "Options:"
  echo "  --clean       Clean build (removes build artifacts first)"
  echo "  --release     Build in Release configuration (default: Debug)"
  echo "  --help        Show this help message"
}

while [[ $# -gt 0 ]]; do
  case $1 in
    --clean)
      CLEAN_BUILD=true
      shift
      ;;
    --release)
      BUILD_CONFIG="Release"
      shift
      ;;
    --help)
      print_help
      exit 0
      ;;
    *)
      echo -e "${RED}Unknown option: $1${NC}"
      echo "Use --help for usage information"
      exit 1
      ;;
  esac
done

# Clean if requested
if [ "$CLEAN_BUILD" = true ]; then
  echo -e "${YELLOW}üßπ Cleaning build artifacts...${NC}"
  rm -rf "$DERIVED_DATA_PATH"
  xcodebuild clean \
    -project "$PROJECT_DIR/$PROJECT_NAME.xcodeproj" \
    -scheme "$SCHEME_NAME" \
    -configuration "$BUILD_CONFIG" \
    -destination "$DESTINATION" \
    > /dev/null 2>&1 || true
  echo -e "${GREEN}‚úì Clean complete${NC}"
fi

# Build the project
echo -e "${YELLOW}üî® Building $PROJECT_NAME ($BUILD_CONFIG)...${NC}"
xcodebuild build \
  -project "$PROJECT_DIR/$PROJECT_NAME.xcodeproj" \
  -scheme "$SCHEME_NAME" \
  -configuration "$BUILD_CONFIG" \
  -destination "$DESTINATION" \
  -derivedDataPath "$DERIVED_DATA_PATH" \
  | xcbeautify

BUILD_RESULT=$?

if [ $BUILD_RESULT -ne 0 ]; then
  echo -e "${RED}‚ùå Build failed${NC}"
  exit $BUILD_RESULT
fi

echo -e "${GREEN}‚úì Build successful${NC}"

# Find the built app
APP_PATH="$DERIVED_DATA_PATH/Build/Products/$BUILD_CONFIG/$PROJECT_NAME.app"

if [ ! -d "$APP_PATH" ]; then
  echo -e "${RED}‚ùå Built application not found at: $APP_PATH${NC}"
  exit 1
fi

echo -e "${GREEN}‚úì Application available at: $APP_PATH${NC}"
